# RabbitMQ
old_sound_rabbit_mq:
    debug: true # %kernel.debug%
    enable_collector: true # %kernel.debug%
    connections:
        default:
            host:      %old_sound_rabbit_mq.host%
            port:      %old_sound_rabbit_mq.port%
            user:      %old_sound_rabbit_mq.user%
            password:  %old_sound_rabbit_mq.password%
            vhost:     %old_sound_rabbit_mq.vhost%
    producers:
        # 1) After fetched from various sources it has to be decided if link is porn or not.
        # 2) Find tags and mentions

        # Primary one, where initial messages are published
        primary:
            connection: default
            exchange_options: { name: 'primary', type: direct }

        # Services-related
        twitter:
            connection: default
            exchange_options: { name: 'twitter', type: direct }
        reddit:
            connection: default
            exchange_options: { name: 'reddit', type: direct }
        delicious:
            connection: default
            exchange_options: { name: 'delicious', type: direct }
        stumble_upon:
            connection: default
            exchange_options: { name: 'stumble_upon', type: direct }
        source: # HTML-source of the link itself (to browse DOM and find tags there)
            connection: default
            exchange_options: { name: 'source', type: direct }
    consumers:
        # Primary consumer, which utilizes initial message
        primary:
            connection: default
            exchange_options: { name: 'primary', type: direct }
            queue_options:    { name: 'primary' }
            callback:         imagepush.consumer.primary

        # Services-related
        twitter:
            connection: default
            exchange_options: { name: 'twitter', type: direct }
            queue_options:    { name: 'twitter' }
            callback:         imagepush.consumer.twitter
        reddit:
            connection: default
            exchange_options: { name: 'reddit', type: direct }
            queue_options:    { name: 'reddit' }
            callback:         imagepush.consumer.reddit
        delicious:
            connection: default
            exchange_options: { name: 'delicious', type: direct }
            queue_options:    { name: 'delicious' }
            callback:         imagepush.consumer.delicious
        stumble_upon:
            connection: default
            exchange_options: { name: 'stumble_upon', type: direct }
            queue_options:    { name: 'stumble_upon' }
            callback:         imagepush.consumer.stumble_upon
        source:
            connection: default
            exchange_options: { name: 'source', type: direct }
            queue_options:    { name: 'source' }
            callback:         imagepush.consumer.source
