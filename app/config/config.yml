imports:
    - { resource: parameters.ini }
    - { resource: security.yml }
    - { resource: imagepush.yml }
    - { resource: services.yml }

framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    secret:          %secret%
    charset:         UTF-8
    router:          { resource: "%kernel.root_dir%/config/routing.yml" }
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:
      engines: ['twig']
      #assets_base_urls:
      #  http: [http://cdn.imagepush.to]
      #assets_version: SomeVersionScheme
    session:
        default_locale: %locale%
        auto_start:     true
        
# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    
    # Settings to use in templates
    globals:
      site_url: %site_url%
      cdn_images_url: %cdn_images_url%
      settings:
        show_banners_and_static_helpers: true
        show_comments: true

# Assetic Configuration
assetic:
    #read_from: %kernel.root_dir%/web
    #write_to:  %kernel.root_dir%/web
    debug:          %kernel.debug%
    use_controller: false
    filters:
        cssrewrite: ~
        # closure:
        #     jar: %kernel.root_dir%/java/compiler.jar
        # yui_css:
        #     jar: %kernel.root_dir%/java/yuicompressor-2.4.2.jar

# Doctrine Configuration
doctrine_mongodb:
    connections:
        default:
            server: mongodb://localhost:27017
            options:
                connect: true
                persist: true
    proxy_dir:            %kernel.cache_dir%/doctrine/odm/mongodb/Proxies
    hydrator_dir:         %kernel.cache_dir%/doctrine/odm/mongodb/Hydrators
    default_database: imagepush_%kernel.environment%
    document_managers:
        default:
            metadata_cache_driver: array
            auto_mapping: true
            mappings:
                StofDoctrineExtensionsBundle: false

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%

jms_security_extra:
    secure_controllers:  true
    secure_all_services: false

# Redis DB
#snc_redis:
#    connections:
#        default:
#            alias: default
#            host: 127.0.0.1
#            port: 6379
#            database: 0
#            #password: HeReisTHEMegasuperPuperPassw0rd8595$$@ssssdg7&&.,m!!m
#            connection_timeout: 5
#            read_write_timeout: 30
#            logging: %kernel.debug%
#    clients:
#        default:
#            alias: default
#            connection: default
#            options:
#              profile: 2.2
              
snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
            options:
              profile: 2.2

stof_doctrine_extensions:
    default_locale: en_US
    mongodb:
        default:
          timestampable: true
          sluggable: true

# Imagine
liip_imagine:
    web_root:     %kernel.root_dir%/../web
    cache_prefix: cache
    #cache:        true
    cache:        custom_cache_resolver
    #loader:       ~
    data_loader:  custom_data_loader
    driver:       imagick
    controller_action: imagepush.imagine.controller:filterAction
    filter_sets:
      out:
        filters:
          thumbnail: { mode: outbound }
      in:
        filters:
          thumbnail: { mode: inset }

# Files storage
knp_gaufrette:
    adapters:
        anton_dev:       # My local mac
            local:
                directory:  /Users/Bob/Sites/imagepush2/web/new_uploads
                create:     true
        prod:         # S3 prod server
            amazon_s3:
                amazon_s3_id: imagepush.amazon.s3
                bucket_name:  %s3_bucket_name%
                create:       true
    filesystems:
        images:
            adapter:    %filesystems_images_adapter%
#
#services:
#    imagepush.images.manager:
#        class: Imagepush\ImagepushBundle\Entity\ImagesManager
#        arguments: [@router, @snc_redis.default_client, @imagepush.tags.manager]
#
#    imagepush.tags.manager:
#        class: Imagepush\ImagepushBundle\Entity\TagsManager
#        arguments: [@snc_redis.default_client]
#
#    # Robot services
#    imagepush.fetcher.digg:
#        class: Imagepush\ImagepushBundle\Services\Fetcher\Digg\DiggFetcher
#        arguments: [@service_container]
#
#    imagepush.fetcher.content:
#        class: Imagepush\ImagepushBundle\Services\Fetcher\ContentFetcher
#        arguments: [@service_container]
#
#    imagepush.processor:
#        class: Imagepush\ImagepushBundle\Services\Processor\Processor
#        arguments: [@service_container, %kernel.debug%]
#
#    imagepush.processor.content:
#        class: Imagepush\ImagepushBundle\Services\Processor\Content\Content
#        arguments: [@service_container]
#        prototype: true
#
#    imagepush.processor.content.html:
#        class: Imagepush\ImagepushBundle\Services\Processor\Content\Html
#        arguments: [@service_container]
#        prototype: true
#
#    imagepush.processor.tag:
#        class: Imagepush\ImagepushBundle\Services\Processor\TagProcessor
#        arguments: [@service_container]
#
#    imagepush.publisher:
#        class: Imagepush\ImagepushBundle\Services\Publisher\Publisher
#        arguments: [@service_container]
#
#    # Amazon S3
#    imagepush.amazon.s3:
#        class: Imagepush\ImagepushBundle\Imagine\ImagepushAmazonS3
#
#    #
#    imagepush.imagine.controller:
#      class: Imagepush\ImagepushBundle\Imagine\CustomController
#      arguments: [@liip_imagine.data.manager, @liip_imagine.filter.manager, @liip_imagine.cache.manager, @doctrine.odm.mongodb.document_manager, @liip_imagine, @logger, %kernel.debug%]
#      
#    # Imagine data loader (via Gaufrette with name "images")
#    imagepush.imagine.files.data.loader:
#        class: Imagepush\ImagepushBundle\Imagine\CustomDataLoader
#        arguments: [@liip_imagine, %liip_imagine.formats%, @gaufrette.images_filesystem]
#        tags:
#            - { name: liip_imagine.data.loader, loader: custom_data_loader }
# 
#    # Imagine cache resolver (via Gaufrette with name "images")
#    imagepush.imagine.files.cache.resolver:
#        class: Imagepush\ImagepushBundle\Imagine\CustomCacheResolver
#        arguments: [@service_container, @gaufrette.images_filesystem]
#        tags:
#            - { name: liip_imagine.cache.resolver, resolver: custom_cache_resolver }
#
#    # Twig
#    twig.extension.imagepush:
#        class: Imagepush\ImagepushBundle\Templating\ImagepushExtension
#        arguments: [@service_container]
#        tags:
#            - { name: twig.extension }
#    twig.extension.debug:
#        class: Twig_Extensions_Extension_Debug
#        tags:
#            - { name: twig.extension }
#    twig.extension.text:
#        class: Twig_Extensions_Extension_Text
#        tags:
#            - { name: twig.extension }